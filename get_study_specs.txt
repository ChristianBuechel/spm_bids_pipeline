function [path,vars,analysis,import] = get_study_specs

%% path definitions
hostname = char(getHostName(java.net.InetAddress.getLocalHost));
switch hostname
    case 'Rainbow'
        path.baseDir     = 'd:\obesity\';
        path.templateDir = 'd:\obesity\spm_bids_pipeline\templates\';
        vars.max_procs   = 12;        
end


import.prisma        = {{22147, 22165},{22197, 22214},{22186, 22198},{22201, 22222},{22202, 22223},{22219, 22237},{22229, 22252},{22256, 22268},{22274, 22323},...
                        {22274, 22323},{22275, 22293},{22290, 22326},{22303, 22321},{22304, 22327},{22289, 22316},{22343, 22385},{22386, 22440},{22333, 22390},...
                        {22334, 22391},{22396, 22417},{22418, 22435},{22402, 22422},{22403, 22423},{22425, 22439},{22397, 22426},{22428, 22444},{22461, 22501},...
                        {22469, 22488},{22470, 22489},{22471, 22510},{22472, 22511},{22506, 22527},{22507, 22528},{22548, 22562},{22557, 22580},{22558, 22581},...
                        {22597, 22600},{22598, 22608},{22603, 22614},{22604	22620}}; % translates to PRISMA_nnn
import.prisma_no     = [2             ,3             ,4             ,5             ,6             ,7             ,8             ,9             ,10,...
                        11            ,12            ,13            ,14            ,15            ,16            ,17            ,18            ,19,...
                        20            ,21            ,22            ,23            ,24            ,25            ,26            ,27            ,28,...
                        29            ,30            ,31            ,32            ,33            ,34            ,35            ,36            ,37,...
                        38            ,39            ,40            ,41]; % subject number

                    
import.user          = 'buechel';
import.server        = 'aither.nin.uke.uni-hamburg.de';

import.data(1).dir        = 'func'; 
import.data(1).type       = 'epi';
import.data(1).seq        = 'ninEPI_bold_v12B, 1.5mm3, mb3 '; %protocol name (trailing space makes it unique) 
import.data(1).cond       = 'n > 600'; % heuristic to get only valid runs (e.g. more than 1000 volumes)

import.data(2).dir        = 'anat'; % valid BIDS dir name
import.data(2).type       = 'T1w'; % valid BIDS file name
import.data(2).seq        = 'mprage, HR64 ';
import.data(2).cond       = 'n == 240'; % heuristic to get only valid runs (e.g. exactly 240 slices)
 
% import.data(3).dir        = 'fmap';
% import.data(3).type       = 'phasediff';
% import.data(3).seq        = 'gre_field_map, 2mm ';
% import.data(3).cond       = 'n == 40';
% 
% import.data(4).dir        = 'fmap';
% import.data(4).type       = 'magnitude';
% import.data(4).seq        = 'gre_field_map, 2mm ';
% import.data(4).cond       = 'n == 80';

import.dummies            = 3; 

path.rawDir          = fullfile(path.baseDir, 'rawdata'); % that should be the folder with the zipped not-to-touch data sets
path.derivDir        = fullfile(path.baseDir, 'derivatives');
path.preprocDir      = fullfile(path.baseDir, 'derivatives', 'spm_preprocessing');
path.firstlevelDir   = fullfile(path.baseDir, 'derivatives', 'spm_firstlevel');
path.secondlevelDir  = fullfile(path.baseDir, 'derivatives', 'spm_secondlevel');

%% vars definitions

% various predefined names (do not change)
vars.skullStripID    = 'skull-strip-T1.nii';
vars.T1maskID        = 'brain_mask.nii';
vars.templateID      = 'cb_Template_%d_Dartel.nii';
vars.templateT1ID    = 'cb_Template_T1.nii';
%vars.groupMaskID     = 'brainmask.nii';
vars.groupMaskID     = 'neuromorphometrics.nii';

%% this need to be adapted to your study / computer--------------
vars.task        = 'obesity';
vars.nRuns       = 2;
vars.nSess       = 2;
% get info for slice timing correction
vars.sliceTiming.so       = [1375.0, 1302.5, 1230.0, 1157.5, 1085.0, 1012.5, 940.0, 867.5, 795.0, 725.0, 652.5, 580.0, 507.5, 435.0, 362.5, 290.0, 217.5, 145.0, 72.5, 0.0,...
                             1375.0, 1302.5, 1230.0, 1157.5, 1085.0, 1012.5, 940.0, 867.5, 795.0, 725.0, 652.5, 580.0, 507.5, 435.0, 362.5, 290.0, 217.5, 145.0, 72.5, 0.0,...
                             1375.0, 1302.5, 1230.0, 1157.5, 1085.0, 1012.5, 940.0, 867.5, 795.0, 725.0, 652.5, 580.0, 507.5, 435.0, 362.5, 290.0, 217.5, 145.0, 72.5, 0.0]; % in ms
vars.sliceTiming.tr       = 1.446; % in s
vars.sliceTiming.nslices  = 60;
vars.sliceTiming.refslice = 723;


analysis.all_subs  = [2:6]; % very all;
single_group       = ones(size(analysis.all_subs));

analysis.group_ind  = single_group; %index 1
analysis.group_weights = [1];
analysis.group_names   = {'All'};

analysis.parallel          = 0;
analysis.noise_corr        = ['mov24_wm_csf_roi'];
%analysis.noise_corr        = ['mov24_wm'];
%analysis.noise_corr        = ['physio'];
analysis.cvi               = 'none'; % 'AR(1)'  'FAST' 'none'
analysis.shift             = 0; % shift all onsets
analysis.skernel           = 6; % smoothing kernel
analysis.wls               = 0;
analysis.bs                = 0;
analysis.concatenate       = 0;


%what to do
analysis.do_model          = 0;
analysis.do_est            = 0;
analysis.do_vasa           = 0;
analysis.do_cons           = 0;
analysis.do_correct_vasa   = 0;
analysis.do_warp           = 0;
analysis.do_smooth         = 0;

analysis.do_fact           = 0;
analysis.do_fact_con       = 0;

analysis.do_one_t          = 0;


do_hrf = 0;
do_lsa = 1;
if do_hrf
    analysis.max_procs         = 12;
    
    [analysis.t_con, analysis.t_con_names] = get_hrf_cons;
    
    analysis.ana               = 2; %hrf
    analysis.n_base            = 1;
    analysis.name_ana          = 'lcpa_hrf';
    %analysis.cond_names_old    = {'Face','House','Mix','Pain30','Pain40','Pain50','Pain60','Pain70','PrePain'};
    analysis.cond_names        = {'Face5','Face6','Face7','Face8','House1','House2','House3','House4','Pain30','Pain40','Pain50','Pain60','Pain70'};
end

if do_lsa
    analysis.max_procs         = 12;
    
    analysis.t_con             = [];
    analysis.t_con_names       = [];
    analysis.lss               = 1;
    analysis.ana               = 3; %lsa
    analysis.n_base            = 1;
    analysis.name_ana          = 'lcpa_lsa';
    analysis.cond_names        = {'Face5','Face6','Face7','Face8','House1','House2','House3','House4','Pain30','Pain40','Pain50','Pain60','Pain70'};
end




    function [t_con, t_con_names] = get_hrf_cons
        
        t_con = [ones(1,4) zeros(1,4) zeros(1,5);...
                zeros(1,4) ones(1,4) zeros(1,5);...
                ones(1,4) -ones(1,4) zeros(1,5);...
                -ones(1,4) ones(1,4) zeros(1,5);...
                zeros(1,4) zeros(1,4) ones(1,5)];
        t_con_names         = {'Faces','Houses','Faces_Houses','Houses_Faces','Pain'};
    end

    function [t_con, t_con_names] = get_hrf_cons_old
        
        t_con = [1 zeros(1,8);...
                 0 1 zeros(1,7);...
                 1 -1 zeros(1,7);...
                 -1 1  zeros(1,7);...
                 zeros(1,3) ones(1,5) 0;...
                 zeros(1,3) -2 -1 0 1 2 0];
        t_con_names         = {'Faces','Houses','Faces_Houses','Houses_Faces','Pain','pain_para'};
    end
end