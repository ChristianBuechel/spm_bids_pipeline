function [path,vars,analysis,import,qc] = get_study_specs

%% path definitions
path.baseDir     = 'd:\malepain\';
path.templateDir = 'd:\malepain\spm_bids_pipeline\templates\';
vars.max_procs   = 12;
vars.parallel    = 1; %NEW: determines whether parallel computing is used for all routines

% import.prisma        = {{11658,11672},{11659,11673},{11660,11674},{11808,11815},{11809,11816},{11810,11817},{11811,11818},{11895,11911},{11812,11820},{11813,11821},{11872,11885},{11873,11886},{11874,11887},{11875,11888},{11876,11889},{11896,11912},{11897,11913},{11898,11914},{11899,11915},{11942,11955},{11943,11956},{11944,11957},{11945,11958},{12016,12029},{12017,12030},{11974,11986},{11975,11987},{11976,11988},{11977,11989},{11978,11990},{11979,11991},{12019,12031},{12103,12118},{12104,12119},{12105,12120},{12174,12188},{12175,12189},{12176,12190},{12177,12191},{12195,12205}}; % translates to PRISMA_nnn
% import.prisma_no     = [1            ,2            ,3            ,4            ,5            ,6            ,7            ,8            ,9            ,10           ,11           ,12           ,13           ,14           ,15           ,16           ,17           ,18           ,19           ,20           ,21           ,22           ,23           ,24           ,25           ,26           ,27           ,28           ,29           ,30           ,31           ,32           ,33           ,34           ,35           ,36           ,37           ,38           ,39           ,41]; % subject number
  

% Or you can specify a file: 
% import.prisma    = 'd:\painact\derivatives\spm_preprocessing\participants.tsv';

import.user          = 'buechel';
import.server        = 'revelations.nin.uke.uni-hamburg.de';

import.scanner       = 'TRIO'; % dirty flag to say we have a TRIO number                   

import.data(1).dir        = 'func'; 
import.data(1).type       = 'bold';
import.data(1).seq        = 'nin_ep2d_bold_vb8_fcross '; %protocol name (trailing space makes it unique) 
import.data(1).cond       = 'n > 500'; % heuristic to get only valid runs (e.g. more than 1000 volumes)

import.data(2).dir        = 'anat'; % valid BIDS dir name
import.data(2).type       = 'T1w'; % valid BIDS file name
import.data(2).seq        = 'mprage, 1x1x1mm3, COR, ns, 32-channel ';
import.data(2).cond       = 'n == 240'; % heuristic to get only valid runs (e.g. exactly 240 slices)
 
import.dummies            = 4; % these scans are removed when merging 3D epifiles to a 4D file

path.derivDir        = fullfile(path.baseDir, 'derivatives');
path.preprocDir      = fullfile(path.baseDir, 'derivatives', 'spm_preprocessing');
path.firstlevelDir   = fullfile(path.baseDir, 'derivatives', 'spm_firstlevel');
path.secondlevelDir  = fullfile(path.baseDir, 'derivatives', 'spm_secondlevel');

%% vars definitions

% various predefined names (change only if you know what you are doing)
vars.skullStripID    = 'skull-strip-T1.nii';
vars.T1maskID        = 'brain_mask.nii';
vars.templateID      = 'cb_Template_%d_Dartel.nii';
vars.templateT1ID    = 'cb_Template_T1.nii';
vars.groupMaskID     = 'neuromorphometrics.nii';
vars.brainstemID     = 'Cerebellum_SUIT_05.nii'; % or 'brainstem_mask.nii'
vars.templateStripID = 'cb_Template_SkullStrip.nii';

%% this need to be adapted to your study / computer--------------
vars.task        = 'malepain';
vars.nRuns       = 1;
vars.nSess       = 2;
% get info for slice timing correction
vars.sliceTiming.so       = [2527.50,2465.00,2405.00,2342.50,2280.00,2220.00,2157.50,2095.00,2035.00,1972.50,1910.00,1850.00,1787.50,1725.00,1665.00,1602.50,1540.00,1480.00,1417.50,1355.00,1295.00,1232.50,1170.00,1110.00,1047.50,985.00,925.00,862.50,800.00,740.00,677.50,615.00,555.00,492.50,430.00,370.00,307.50,245.00,185.00,122.50,60.00,0.00]; % in ms
vars.sliceTiming.tr       = 2.58; % in s
vars.sliceTiming.nslices  = 40;
vars.sliceTiming.refslice = 1290;

%file name for mov regressors
qc.movFilename  = 'noise_mov_rasub-%02d_ses-%02d_task-%s_run-%02d_bold.mat';

%thresholds for movement inspection
qc.threshSpike     = 0.7; %threshold for spikes
qc.threshMov       = 3; %threshold for overall movement within 1 run or between runs
qc.percSpike       = 0.05; %threshold in % in number of volumes that are discarded because of spikes

%% display options

qc.maxDisImg       = 7; %number of subject images displayed at once (not all numbers make sense here, 7 means a 4x2 display including template, otherwise try 5(3x2))
qc.contour         = 1; %1: template contour is displayed on images; 0: is not displayed

%% first level related qc

qc.tThresh         = 1.7; %t-value threshold, only values above this threshold will be shown
qc.tMapSmoothK     = 4; %smoothing kernel for t-map
qc.overlayColor    = [1 0 0]; %color for overlay (here red)


% the next section can be used to define different groups for 2nd level analysis
analysis.all_subs  = [1:39 41]; % all;
single_group       = ones(size(analysis.all_subs));
analysis.group_ind  = single_group; %index 1
analysis.group_weights = [1];
analysis.group_names   = {'All'};

analysis.max_procs         = 12; % how many processes can be used for 1st level analyses
%%analysis.parallel          = 1; THIS HAS BEEN DEPRECATED use vars.parallel instead
analysis.noise_corr        = ['mov24_wm_csf_roi']; % can contain any combination of "mov6" "mov24" "wm" "csf" "roi" "physio"
%analysis.noise_corr        = ['mov24_wm'];
%analysis.noise_corr        = ['physio'];
analysis.cvi               = 'none'; % any of "AR(1)"  "FAST" "none" "wls" the latter uses J. Diedrichsen toolbox to do WLS https://www.diedrichsenlab.org/imaging/robustWLS.html
analysis.shift             = 0; % shift all onsets by n TRs
analysis.skernel           = 6; % smoothing kernel
analysis.hpf               = 240;
analysis.bs                = 0; % do brainstem specific analysis
analysis.use_vasa          = 0; % do vasa correction https://www.sciencedirect.com/science/article/pii/S1053811915008484

% what to do 1st level
analysis.do_model          = 0; % specify the model
analysis.do_est            = 0; % estimate the model
analysis.do_vasa           = 0; % estimate Vasa image for correction
analysis.do_cons           = 0; % do contrasts
analysis.do_correct_vasa   = 0; % correct con images using Vasa image 
analysis.do_warp           = 0; % warp native space con or beta images to template space
analysis.do_smooth         = 0; % smooth these warped beta and con images

% what to do second level
analysis.do_fact           = 1; % simple anova that reproduces the 1st level at the 2nd level
analysis.do_fact_con       = 1; % do all contrasts at the second level

analysis.do_one_t          = 0; % instead use the estimated cons from 1st level and do one sample t tests


%% some code to organise the analyses
do_hrf        = 0;
do_hrf_time   = 1;
do_hrf_days   = 0;
do_fir        = 0;
do_lsa        = 0;


if do_hrf    
    [analysis.t_con, analysis.t_con_names] = get_hrf_cons;
    
    analysis.concatenate       = 1; % concatenate or not ?
    analysis.ana               = 2; % hrf
    analysis.n_base            = 1;
    analysis.name_ana          = 'malepain_hrf';
    analysis.events            = ''; % this refers to the tsv file: e.g. sub-08_ses-01_task-lcpa_run-01_events_param.tsv
    analysis.cond_names        = {'Pain'}; % three conditions
    analysis.p_mod             = {{}    }; % vis and pain have 1 or 2 parametric modulators
end

if do_hrf_time
    [analysis.t_con, analysis.t_con_names] = get_hrf_time;
    
    analysis.concatenate       = 0; % concatenate or not ?
    analysis.ana               = 2; % hrf
    analysis.n_base            = 1;
    analysis.name_ana          = 'malepain_hrf_time';
    analysis.events            = '_time'; % this refers to the tsv file: e.g. sub-08_ses-01_task-lcpa_run-01_events_param.tsv
    analysis.cond_names        = {'Pain'}; % one condition
    analysis.p_mod             = {{'p_time'}    }; % 1 parametric modulator
end

if do_hrf_days    
    [analysis.t_con, analysis.t_con_names] = get_hrf_days;
    
    analysis.concatenate       = 0; % concatenate or not ?
    analysis.ana               = 2; % hrf
    analysis.n_base            = 1;
    analysis.name_ana          = 'malepain_hrf_days';
    analysis.events            = '_days'; % this refers to the tsv file: e.g. sub-08_ses-01_task-lcpa_run-01_events_param.tsv
    analysis.cond_names        = {'Pain1','Pain2'}; % three conditions
    analysis.p_mod             = {{}    ,{}}; % vis and pain have 1 or 2 parametric modulators
end

if do_fir
    analysis.max_procs         = 12; % large DesMtx
    analysis.concatenate       = 1;
    analysis.t_con             = [];
    analysis.t_con_names       = [];
    analysis.ana               = 1; % fir
    analysis.n_base            = 8;
    analysis.name_ana          = 'malepain_fir';
    analysis.events            = '_fir'; % this refers to the tsv file: e.g. sub-08_ses-01_task-lcpa_run-01_bold_param.tsv
    analysis.cond_names        = {'Pain'}; % only pain
    analysis.p_mod             = {{}};
end


    function [t_con, t_con_names] = get_hrf_cons
        
        t_con               = [1     ;-1];
        t_con_names         = {'Pain','Pain_neg'};
    end

    function [t_con, t_con_names] = get_hrf_time
        
        t_con               = [1 0    ;-1 0     ;0 1       ;0 -1];
        t_con_names         = {'Pain','Pain_neg','time_pos','time_neg'};
    end

    function [t_con, t_con_names] = get_hrf_days
        
        t_con               = [1 1   ;-1 -1     ;1 -1       ;-1 1];
        t_con_names         = {'Pain','Pain_neg','Day1>Day2','Day2>Day1'};
    end

end